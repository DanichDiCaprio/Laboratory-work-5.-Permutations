#include <iostream>


bool proverka(int b[], int n)
{
for (int i = 0; i < n; i++)
if (b[i] > (n - (i + 1)))
return false;
return true;
}
int invtab_to_permut(int b[], int a[], int n)
{
bool prov = proverka(b, n);
if (!prov)
return 0;
else
{

for (int i = 0; i < n; i++)
{
int el = i + 1, k = 0;
for (int j = 0; j < n; j++)
{
if ((k == b[i]) && (a[j] == 0))
{
a[j] = el;
break;
}
if (a[j] == 0)
k++;
}
}
return 1;
}
}
int main()
{
const int N = 1000;
int a[N];
int n = 0, k;
int b[N];
scanf_s("%d", &n);
for (int i = 0; i < n; i++)
{
scanf_s("%d", &b[i]);
a[i] = 0;
}
k = invtab_to_permut(b, a, n);
if (k == 1)
for (int i = 0; i < n; i++)
printf("%d ", a[i]);
else
printf("NO");
}
